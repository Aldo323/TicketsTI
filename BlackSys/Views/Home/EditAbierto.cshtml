@model BlackSys.Models.Solicitudes

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #Conclusion {
        margin: 0px;
        width: 560px;
        height: 146px;
    }

    #Ubicacion, #Correo, #Departamento, #Telefono, #Tipo_solicitud, #Descripcion, #Fecha_levantamiento, #SLA_C_A, #SLA_C_M, #SLA_C_B, #Activo, #Subactivo {
        display: none;
    }
</style>

<h2>
    Edit Ticket #
    @{int numero = Model.IdSolicitud;}
    @Html.Label(numero.ToString())
</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    List<SelectListItem> listItems = new List<SelectListItem>();

    listItems.Add(new SelectListItem
    {
        Text = "ABIERTO",
        Value = "ABIERTO"
    });
    listItems.Add(new SelectListItem
    {
        Text = "CERRADO",
        Value = "CERRADO",

    });

    List<SelectListItem> lista = new List<SelectListItem>();

    lista.Add(new SelectListItem
    {
        Text = "[ SELECCIONA UNA PRIORIDAD ]",
        Selected = true
    }
    );

    lista.Add(new SelectListItem
    {
        Text = "ALTA",
        Value = "ALTA"
    });

    lista.Add(new SelectListItem
    {
        Text = "MEDIA",
        Value = "MEDIA"

    });

    lista.Add(new SelectListItem
    {
        Text = "BAJA",
        Value = "BAJA"

    });

    <hr />
    <div id="charts"></div>

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdSolicitud)





        @Html.EditorFor(model => model.Ubicacion, new { style = "display:none", htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })



        @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })





        @Html.EditorFor(model => model.Departamento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Departamento, "", new { @class = "text-danger" })



        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })




        @Html.EditorFor(model => model.Tipo_solicitud, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Tipo_solicitud, "", new { @class = "text-danger" })


        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })

        @Html.EditorFor(model => model.Fecha_levantamiento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.Fecha_levantamiento, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Estatus, listItems, new { @class = "form-control", })
            </div>
        </div>




        @Html.EditorFor(model => model.SLA_C_A, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.SLA_C_A, "", new { @class = "text-danger" })



        @Html.EditorFor(model => model.SLA_C_M, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.SLA_C_M, "", new { @class = "text-danger" })



        @Html.EditorFor(model => model.SLA_C_B, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @Html.ValidationMessageFor(model => model.SLA_C_B, "", new { @class = "text-danger" })


     

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => Model.Categoria, lista, new { @class = "form-control" })
            </div>
        </div>

        @* <div class="form-group">
                @Html.LabelFor(model => model.Fecha_cierre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @Html.EditorFor(model => model.Fecha_cierre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fecha_cierre, "", new { @class = "text-danger" })
                </div>
            </div>*@


        @Html.EditorFor(model => model.Activo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", visible = "false" } })
        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })



        @Html.EditorFor(model => model.Subactivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", visible = "false" } })
        @Html.ValidationMessageFor(model => model.Subactivo, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Conclusion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Conclusion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Conclusion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script>
        $(document).ready(function () {
            $.ajax({
                /**/
                  url: '@System.Configuration.ConfigurationManager.AppSettings["Request"]/api/values?gard=' + @numero.ToString() ,
        /**/
        success: function (data) {
            for (var i = 0; i < data.length; i++) {

                var h5 = document.getElementById("charts");
                h5.innerHTML += '<p><b>Ubicacion: </b>' + data[i].Ubicacion +
                    '<b></br>Departamento: </b> ' + data[i].Departamento +
                    '<b></br>Activo: </b> ' + data[i].Activo +
                    '<b></br>Subactivo: </b> ' + data[i].Subactivo +
                    '<b></br>Estatus: </b> ' + data[i].Estatus +
                    '<b></br>Responsable: </b> ' + data[i].Responsable +
                    '<b></br>Descripcion: </b> ' + data[i].Descripcion;
                switch (data[i].Categoria) {
                    case 'BAJA':
                        h5.innerHTML += '<b></br>SLA Bajo: </b> ' + data[i].SLA_C_B;
                        break;
                    case 'MEDIA':
                        h5.innerHTML += '<b></br>SLA Medio: </b> ' + data[i].SLA_C_M;
                        break;
                    case 'ALTA':
                        h5.innerHTML += '<b></br>SLA Alto: </b> ' + data[i].SLA_C_A;
                        break;
                    default: '';
                }
                h5.innerHTML += '</p>';
            }
        }
    });
});
</script>
<div>
    @Html.ActionLink("Back to List", "Product")
</div>
